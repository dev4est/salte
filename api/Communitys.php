<?php/** * Created by PhpStorm. * User: user * Date: 14.04.18 * Time: 22:33 *//** * Работа с товарами * * @copyright    2011 Denis Pikusov * @link        http://simplacms.ru * @author        Denis Pikusov * */require_once('Simpla.php');use Communitys\Topic;use Communitys\Users;use Communitys\Vote;use Communitys\Comment;class Communitys extends Simpla{    private $visible_filter = '';    private $group_by = '';    private $sql_limit = '';    private $page = 1;    private $limit = 100;    private $filter = '';    private $filter_user_id = '';    /* get communitys     * @param integer $id     * return object    */    public function get_communitys(array $filter = array())    {        if(isset($filter['limit']))            $limit = max(1, intval($filter['limit']));        if(isset($filter['page']))            $page = max(1, intval($filter['page']));        if(isset($filter['user_id']))            $this->filter_user_id = $this->db->placehold('LEFT JOIN __communitys_user as cu ON cu.community_id=p.id AND cu.user_id=?', $filter['user_id']);        $this->sql_limit = $this->db->placehold(' LIMIT ?, ? ', ($this->page-1)*$this->limit, $this->limit);        if (!empty($filter['sort']))            $order = $this->sort($filter['sort']);        else            $order = 'p.name';        if(isset($filter['visible']))            $this->visible_filter = $this->db->placehold('AND p.visible=?', intval($filter['visible']));        $query = "SELECT  p.id, p.url, p.user_id, p.parent_id, p.name, p.annotation, p.body, p.created as created,					p.visible, p.meta_title, p.meta_keywords, p.meta_description,					p.type, p.legal_form_id, p.countuser, p.image				FROM __communitys as p	                $this->filter_user_id				WHERE 1 $this->visible_filter				$this->group_by				ORDER BY $order					$this->sql_limit";        $this->db->query($query);        return $this->db->results();    }    /* get community     * @param integer $id     * return object    */    public function get_community($id = 0)    {        if(is_int($id))            $this->filter = $this->db->placehold('p.id = ?', $id);        else            $this->filter = $this->db->placehold('p.url = ?', $id);        $query = "SELECT  p.id, p.url, p.user_id, p.parent_id, p.name, p.annotation, p.body, p.created as created,					p.visible, p.meta_title, p.meta_keywords, p.meta_description,					p.type, p.legal_form_id, p.countuser, p.image				FROM __communitys p						WHERE $this->filter                GROUP BY p.id                LIMIT 1";		$this->db->query($query);        return $this->db->result();    }    private function sort($sort)    {        switch ($sort) {            case 'position':                $order = 'p.position DESC';                break;            case 'name':                $order = 'p.name';                break;            case 'created':                $order = 'p.created DESC';                break;            case 'price':                //$order = 'pv.price IS NULL, pv.price=0, pv.price';                $order = '(SELECT -pv.price FROM __variants pv WHERE (pv.stock IS NULL OR pv.stock>0) AND p.id = pv.product_id AND pv.position=(SELECT MIN(position) FROM __variants WHERE (stock>0 OR stock IS NULL) AND product_id=p.id LIMIT 1) LIMIT 1) DESC';                break;        }        return $order;    }    public function Topic()    {        return new Topic();    }    public function Users()    {        return new Users();    }    public function Vote()    {        return new Vote();    }    public function Comment()    {        return new Comment();    }}