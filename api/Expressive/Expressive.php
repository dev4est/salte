<?php/** * Created by PhpStorm. * User: user * Date: 25.05.18 * Time: 00:14 */namespace Expressive;use Psr\Http\Message\ResponseInterface;use Psr\Http\Message\ServerRequestInterface;use Psr\Http\Server\MiddlewareInterface;use Psr\Http\Server\RequestHandlerInterface;use Zend\Expressive\Csrf\CsrfGuardInterface;use Zend\Expressive\Csrf\CsrfMiddleware;class Expressive implements MiddlewareInterface{    public function process(ServerRequestInterface $request, RequestHandlerInterface $handler) : ResponseInterface    {        $guard = $request->getAttribute(CsrfMiddleware::GUARD_ATTRIBUTE);        $token = $guard->generateToken();       /* $data  = $request->getParsedBody();        $token = $data['__csrf'] ?? '';        if (! $guard->validateToken($token)) {            return new EmptyResponse(412); // Precondition failed        }*/        return $token;    }}