<?php/** * Created by PhpStorm. * User: user * Date: 02.06.18 * Time: 23:43 */require_once('Simpla.php');class Files extends Simpla{    /**     * Converts bytes into human readable file size.     *     * @param string $bytes     * @return string human readable file size (2,87 Мб)     * @author Mogilev Arseny     */    function FileSizeConvert($bytes)    {        $bytes = floatval($bytes);        $arBytes = array(            0 => array(                "UNIT" => "TB",                "VALUE" => pow(1024, 4)            ),            1 => array(                "UNIT" => "GB",                "VALUE" => pow(1024, 3)            ),            2 => array(                "UNIT" => "MB",                "VALUE" => pow(1024, 2)            ),            3 => array(                "UNIT" => "KB",                "VALUE" => 1024            ),            4 => array(                "UNIT" => "B",                "VALUE" => 1            ),        );        foreach($arBytes as $arItem)        {            if($bytes >= $arItem["VALUE"])            {                $result = $bytes / $arItem["VALUE"];                $result = str_replace(".", "," , strval(round($result, 2)))." ".$arItem["UNIT"];                break;            }        }        return $result;    }    // Recover all file sizes larger than > 4GB.    // Works on php 32bits and 64bits and supports linux    // Used the com_dotnet extension    function getSize($file) {        $size = filesize($file);        if ($size <= 0)            if (!(strtoupper(substr(PHP_OS, 0, 3)) == 'WIN')) {                $size = trim(`stat -c%s $file`);            }            else{                $fsobj = new COM("Scripting.FileSystemObject");                $f = $fsobj->GetFile($file);                $size = $f->Size;            }        return $size;    }}