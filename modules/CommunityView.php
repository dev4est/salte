<?php/** * Created by PhpStorm. * User: user * Date: 15.04.18 * Time: 13:14 *//** * Simpla CMS * * @copyright 	2011 Denis Pikusov * @link 		http://simplacms.ru * @author 		Denis Pikusov * * Этот класс использует шаблон page.tpl * */require_once('View.php');use Communitys\Users;/** * @property mixed|null communitys */class CommunityView extends View{    function fetch()    {        $id = $this->request->get('id', 'integer');        $community = $this->communitys->get_community((int) $id);        $community ->rules = $this->communitys->get_rules($this->user->id);        //console_log($community);        $topic = $this->communitys->Topic();        // Отображать скрытые страницы только админу        if(empty($this->user->id) || empty($community->rules['fetch']))            return false;        $community->is_user = $this->communitys->is_user(['community_id'=>$id, 'user_id'=>$this->user->id]);        $this->design->assign('topics',  $topic->getTopics(['community_id'=>$id]));        $this->design->assign('nav_bar', 5);        $this->design->assign('community', $community);        $this->design->assign('meta_title', $community->meta_title);        $this->design->assign('meta_keywords', $community->meta_keywords);        $this->design->assign('meta_description', $community->meta_description);        $this->design->assign('page_name', $community->name);        return $this->design->fetch('community.tpl');    }    public function messagesAction()    {        $id = $this->request->get('id', 'integer');        $community = $this->communitys->get_community((int) $id);        $community->is_user = $this->communitys->is_user(['community_id'=>$id, 'user_id'=>$this->user->id]);        $community ->rules = $this->communitys->get_rules($this->user->id);        // Отображать скрытые страницы только админу        if(empty($this->user->id) || empty($community->rules['messagesAction']))            return false;        $this->design->assign('community', $community);        $this->design->assign('nav_bar', 4);        $this->design->assign('page_name', $community->name);        return $this->design->fetch('community.tpl');    }    public function usersAction()    {        $id = $this->request->get('id', 'integer');        $visible = $this->request->get('visible');        $community = $this->communitys->get_community((int) $id);        $community->is_user = $this->communitys->is_user(['community_id'=>$id, 'user_id'=>$this->user->id]);        $community ->rules = $this->communitys->get_rules($this->user->id);              $users = $this->communitys->Users();        $this->design->assign('users', $users->getUsers(['community_id'=>$id, 'visible'=>$visible]));        // Отображать скрытые страницы только админу        if(empty($community) || (!$community->visible && empty($_SESSION['admin'])))            return false;        $user_filters = new stdClass();        $user_filters ->visible = (int) $visible;        $this->design->assign('community', $community);        $this->design->assign('user_filters', $user_filters);        $this->design->assign('nav_bar', 3);        $this->design->assign('page_name', $community->name);        return $this->design->fetch('community.tpl');    }    public function addUserAction()    {        if(empty($this->user->id) || $this->request->check_session())            return false;        $community_id = $this->request->post('id');        $user_id= $this->user->id;        $user = $this->communitys->Users();        $id = $user->add_user(['community_id'=>$community_id, 'user_id'=>$user_id, 'type'=>'user', 'visible'=>0]);        if(empty($id))           return false;        $community = new stdClass();        $community->is_user = (int) 0;        $this->design->assign('community', $community);        $this->design->assign('wrapper', 'community/add_buttom.tpl');        $result = $this->design->fetch('community/add_buttom.tpl');        return $this->ajax->result_json($result);    }    /**     * @return mixed     */    public function updateUserAction()    {        if(empty($this->user->id) || $this->request->check_session())            return false;        $community_id = $this->request->post('community_id');        $visible = $this->request->post('visible');        $user_id = $this->request->post('user_id');;        if(empty($user_id))            return false;        $model_user = $this->communitys->Users();        $result = $model_user ->update_user(['community_id'=>$community_id, 'user_id'=>$user_id], ['visible'=>$visible]);        $this->design->assign('wrapper', 'ajax.tpl');        return $this->ajax->result_json($result);    }    public function eventsAction()    {        $this->design->assign('page_name', 'календар подій');        return $this->design->fetch('events.tpl');    }}