<?php/** * Created by PhpStorm. * User: user * Date: 24.05.18 * Time: 23:33 */require_once('View.php');/** * Class CommentView * @property mixed|null communitys * @property mixed|null request */class CommentView extends View{    /**     * @return bool     */    public function addAction()    {        $this->design->assign('wrapper', 'ajax.tpl');        if(!$this->request->check_session())           exit();        $parent_id = $this->request->get('parent_id');        $topic_id = $this->request->get('type');        $text = $this->request->get('text');        if(empty($text) || empty($topic_id) || empty($this->user->id))          return false;        $model_comment = $this->communitys->Comment();        $id = $model_comment->add_comment(['parent_id'=>$parent_id, 'user_id'=>$this->user->id, 'topic_id'=>$topic_id, 'text'=>$text]);        $comment = $model_comment->get_comment($id);        $this->design->assign('comment', $comment);        $result = $this->design->fetch('comment/item.tpl');        return $this->ajax->result_json($result);    }    public function updateAction()    {        $this->design->assign('wrapper', 'ajax.tpl');        if(!$this->request->check_session())            exit();        $id = $this->request->get('parent_id');        $topic_id = $this->request->get('type');        $text = $this->request->get('text');        if(empty($text) || empty($topic_id) || empty($this->user->id))            return false;        $model_comment = $this->communitys->Comment();        $id = $model_comment->update_comment($id, ['text'=>$text]);        $comment = $model_comment->get_comment($id);        $this->design->assign('comment', $comment);        $result = $this->design->fetch('comment/item.tpl');        return $this->ajax->result_json($result);    }    public function deleteAction()    {        $this->design->assign('wrapper', 'ajax.tpl');        $model_topic = $this->communitys->Topic();        if(!$this->request->check_session() || !$this->rules->is_rule('comment_delete', $model_topic->get_rules($this->user->id)))            exit();        $filter['id'] = $this->request->get('id');        $filter['parent_id'] = $this->request->get('parent_id');        $model_comment = $this->communitys->Comment();        $model_comment->delete_comment($filter);        return $this->ajax->result_json(true);    }}