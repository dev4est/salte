<?PHP/** * Simpla CMS * * @copyright 	2011 Denis Pikusov * @link 		http://simplacms.ru * @author 		Denis Pikusov * * Этот класс использует шаблон page.tpl * */require_once('View.php');class MessagesView extends View{    function fetch()    {        // Отображать скрытые страницы только админу        if(empty($this->user->id))            return false;        $filter['subject_id'] = $id = $this->request->get('id', 'integer');        $messages = $this->messages->get_massage(['subject_id'=>$id]);        if(!empty($messages))        {            $this->design->assign('messages', $messages);            $this->design->assign('messages_id', $messages[count($messages)-1]->id);        }        $filter['user_id'] = $this->user->id;        $items= $this->users->get_messages($filter);        $this->design->assign('items', $items);        /*Subject*/        $subject = $this->messages->get_subject($id);        $this->design->assign('subject', $subject);        /*get users*/        $users = $this->messages->get_users($id);        $this->design->assign('users', $users);        if(!empty($messages))        {            foreach($messages as $m)                $message_ids[$m->id] = $m->id;            /*get files messages*/            $files = $this->messages->get_files(['message_id'=>$message_ids, 'subject_id'=>$id]);            $this->debug->console_log($files);            $this->design->assign('files', $files);        }        $this->design->assign('left_bar', 'messages/item_block.tpl');        $this->design->assign('page_name', $subject->text);        $body = $this->design->fetch('messages.tpl');        return $body;    }    public function createAction()    {        return $this->design->fetch('messages/create.tpl');    }    public function addAction()    {        $subject_id = $this->request->post('id', 'integer');        $text = $this->request->post('text');        $result = $this->messages->add_message(['subject_id'=>$subject_id,            "author"=>$this->user->username.' '.$this->user->surname,            'text'=>$text,            'user_id'=>$this->user->id]);        $this->design->assign('wrapper', 'ajax.tpl');        return $this->ajax->result_json($result);    }    public function loadAction()    {        $filter['subject_id'] = $this->request->post('id', 'integer');        $filter['id'] = $this->request->post('last', 'integer');        $result['id'] = $filter['id'];        $messages = $this->messages->get_massage($filter);        if(count($messages)>0)        {            $this->design->assign('messages', $messages);            $this->design->assign('wrapper', 'ajax.tpl');            $result['text'] = $this->design->fetch('messages/item.tpl');            $result['id'] =$messages[count($messages)-1]->id;        }        return $this->ajax->result_json($result);    }    public function sendAction()    {        $message = $this->request->post('message');        $group = $this->request->post('group');        $m = new stdClass();        $m->author = $this->user->name." ". $this->user->surname;        $m->create_data = date("Y-m-d H:i:s");        $m->text = $message;        $m->image = $this->user->image;        $m->user_id = $this->user->id;        $this->design->assign('m', $m);        $result = $this->design->fetch('messages/item_message.tpl');        $message_id = $this->messages->add_message(['subject_id'=>$group, 'author'=>$m->author, 'text'=>$m->text, 'user_id'=>$m->user_id, 'visible'=>1]);        $uploaddir = 'files/chat/'.$group.'/';        if(!empty($_FILES['media']['name'][0]))        {            if(!is_dir($uploaddir)) mkdir($uploaddir, 0777);            $result .= '<li class="media">                <div class="media-left"></div>                <div class="media-body">                     <div class="row">';            foreach($_FILES as $file)            {                for($i=0; $i < count($file['name']); $i++)                {                    if(move_uploaded_file($file['tmp_name'][$i], $uploaddir . basename($file['name'][$i])))                    {                        $info = new SplFileInfo($uploaddir . basename($file['name'][$i]));                        $f = new stdClass();                        $f->name = $file['name'][$i];                        $f->subject_id = $group;                        $f->size = $file['size'][$i];                        $f->extension = $info->getExtension();                        $this->design->assign('f', $f);                        $this->messages->add_file(['message_id'=>$message_id, 'user_id'=>$m->user_id, 'name'=>$f->name]);                        $result .= $this->design->fetch('messages/item_file.tpl');                    }                    else                    {                        $error = true;                    }                }            }            $result .='</div></div></li>';        }        // This all was here before  ;)        $entryData = array('category' =>$group        , 'title'    =>$result        , 'article'  => 'author'        );        /* $pdo->prepare("INSERT INTO blogs (title, article, category, published) VALUES (?, ?, ?, ?)")             ->execute($entryData['title'], $entryData['article'], $entryData['category'], $entryData['when']);     */        // This is our new stuff        $context = new ZMQContext();        $socket = $context->getSocket(ZMQ::SOCKET_PUSH, 'my pusher');        $socket->connect("tcp://127.0.0.1:5555");        $socket->send(json_encode($entryData));    }}